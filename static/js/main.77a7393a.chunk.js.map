{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handlePressedKey","event","setState","key","document","addEventListener","this","removeEventListener","className","length","Component","ReactDOM","render","getElementById"],"mappings":"2MAEaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,EAaEC,iBAAmB,SAACC,GAClB,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAdtC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,oBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,oBAV/C,oBAiBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGT,EAAWU,OAAS,EAApB,mCAC6BV,EAD7B,KAGC,kCA1BZ,GAAyBW,a,MCGzBC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.77a7393a.chunk.js","sourcesContent":["import { Component } from 'react';\n\nexport class App extends Component {\n  state = {\n    pressedKey: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handlePressedKey);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handlePressedKey);\n  }\n\n  handlePressedKey = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {pressedKey.length > 0 ? (\n            `The last pressed key is [${pressedKey}]`\n          ) : (\n            'Nothing was pressed yet'\n          )}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}